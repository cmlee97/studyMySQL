대장균들은 일정 주기로 분화하며, 분화를 시작한 개체를 부모 개체, 분화가 되어 나온 개체를 자식 개체라고 합니다.
다음은 실험실에서 배양한 대장균들의 정보를 담은 ECOLI_DATA 테이블입니다.
ECOLI_DATA 테이블의 구조는 다음과 같으며, ID, PARENT_ID, SIZE_OF_COLONY, DIFFERENTIATION_DATE, GENOTYPE 은 각각 대장균 개체의 ID, 부모 개체의 ID, 개체의 크기, 분화되어 나온 날짜, 개체의 형질을 나타냅니다.

Column name	Type	Nullable
ID	INTEGER	FALSE
PARENT_ID	INTEGER	TRUE
SIZE_OF_COLONY	INTEGER	FALSE
DIFFERENTIATION_DATE	DATE	FALSE
GENOTYPE	INTEGER	FALSE
최초의 대장균 개체의 PARENT_ID 는 NULL 값입니다.

문제
각 세대별 자식이 없는 개체의 수(COUNT)와 세대(GENERATION)를 출력하는 SQL문을 작성해주세요.
이때 결과는 세대에 대해 오름차순 정렬해주세요. 단, 모든 세대에는 자식이 없는 개체가 적어도 1개체는 존재합니다.

with recursive temp as(
    SELECT id, parent_id, 1 as generation
    FROM ecoli_data
    WHERE parent_id is null
    UNION ALL
    SELECT s.id, s.parent_id, temp.generation+1
    FROM temp JOIN ecoli_data s
    ON temp.id = s.parent_id
)
SELECT count(*) count, generation
FROM temp
WHERE id NOT IN(
    SELECT DISTINCT parent_id
    FROM temp
    WHERE parent_id IS NOT NULL
)
GROUP BY generation
ORDER BY 2;

MySQL에서 'WITH'절은 서브쿼리를 만들고 재사용 가능한 공통 테이블 표현식(Common Table Expression, CTE)을 정의하는 방법
WITH절을 사용하여 쿼리를 단순화하고 가독성을 높일 수 있음

WITH절을 사용하는 기본적인 구문
WITH [cte_name] AS (
   SELECT [column_name(s)]
   FROM [table_name]
   WHERE [condition]
)
SELECT [column_name(s)]
FROM [table_name]
JOIN [cte_name] ON [join_condition]
WHERE [condition];
